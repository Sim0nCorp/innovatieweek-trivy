apiVersion: v1
kind: Pod
metadata:
  name: bad-pod
spec:
  containers:
  - name: bad-container
    image: nginx:latest
    securityContext:
      allowPrivilegeEscalation: true
    ports:
    - containerPort: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: bad-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bad-app
  template:
    metadata:
      labels:
        app: bad-app
    spec:
      containers:
      - name: bad-container
        image: nginx:latest
        securityContext:
          runAsUser: 0
          allowPrivilegeEscalation: true

---

apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: bad-psp
spec:
  privileged: true
  allowPrivilegeEscalation: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny

---

apiVersion: v1
kind: Service
metadata:
  name: bad-service
spec:
  selector:
    app: bad-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: LoadBalancer

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: bad-config
data:
  config.yaml: |
    apiVersion: v1
    kind: Config
    metadata:
      name: insecure-config
    data:
      password: "plaintextpassword"

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-all
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - {}
  egress:
  - {}

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: bad-rolebinding
subjects:
- kind: User
  name: bad-user
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io